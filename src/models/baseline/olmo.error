Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:19<00:38, 19.11s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:39<00:19, 19.99s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:56<00:00, 18.62s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:56<00:00, 18.90s/it]
Device set to use cuda:0
Traceback (most recent call last):
  File "/gscratch/stf/jiamu/LING573_AutoMeta/src/run_summarization.py", line 25, in <module>
    output, gold_metareview = olmo.run_olmo_summarization(
  File "/mmfs1/gscratch/stf/jiamu/LING573_AutoMeta/src/models/baseline/olmo.py", line 15, in run_olmo_summarization
    summarizer = pipeline(
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/pipelines/__init__.py", line 1180, in pipeline
    return pipeline_class(model=model, framework=framework, task=task, **kwargs)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/pipelines/text_generation.py", line 99, in __init__
    super().__init__(*args, **kwargs)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/pipelines/base.py", line 996, in __init__
    self.model.to(self.device)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/modeling_utils.py", line 3698, in to
    return super().to(*args, **kwargs)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1340, in to
    return self._apply(convert)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 927, in _apply
    param_applied = fn(param)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1326, in convert
    return t.to(
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 172.00 MiB. GPU 0 has a total capacity of 15.89 GiB of which 119.12 MiB is free. Including non-PyTorch memory, this process has 15.77 GiB memory in use. Of the allocated memory 15.52 GiB is allocated by PyTorch, and 864.00 KiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:07<00:15,  7.71s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:15<00:07,  7.97s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:22<00:00,  7.51s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:22<00:00,  7.60s/it]
Device set to use cuda:0
Traceback (most recent call last):
  File "/gscratch/stf/jiamu/LING573_AutoMeta/src/run_summarization.py", line 25, in <module>
    output, gold_metareview = olmo.run_olmo_summarization(
  File "/mmfs1/gscratch/stf/jiamu/LING573_AutoMeta/src/models/baseline/olmo.py", line 15, in run_olmo_summarization
    summarizer = pipeline(
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/pipelines/__init__.py", line 1180, in pipeline
    return pipeline_class(model=model, framework=framework, task=task, **kwargs)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/pipelines/text_generation.py", line 99, in __init__
    super().__init__(*args, **kwargs)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/pipelines/base.py", line 996, in __init__
    self.model.to(self.device)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/transformers/modeling_utils.py", line 3698, in to
    return super().to(*args, **kwargs)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1340, in to
    return self._apply(convert)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 900, in _apply
    module._apply(fn)
  [Previous line repeated 2 more times]
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 927, in _apply
    param_applied = fn(param)
  File "/gscratch/stf/jiamu/gscratch/stf/jiamu/miniconda3/envs/ling573/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1326, in convert
    return t.to(
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 172.00 MiB. GPU 0 has a total capacity of 15.89 GiB of which 119.12 MiB is free. Including non-PyTorch memory, this process has 15.77 GiB memory in use. Of the allocated memory 15.52 GiB is allocated by PyTorch, and 864.00 KiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
